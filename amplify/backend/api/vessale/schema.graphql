type Chain @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  branding_banner: String
  branding_primary_color: String
  restaurantID: ID! @index(name: "byRestaurant")
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  subdomain: String
  branding_banner: String
  branding_color: String
  chain_id: ID
  Chains: [Chain] @hasMany(indexName: "byRestaurant", fields: ["id"])
  categories: [Category] @hasMany
  orders: [Order] @hasMany
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  restaurantID: ID! @index(name: "byRestaurant")
  items: [MenuItem] @hasMany
}

type MenuItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String!
  price: Float!
  categoryID: ID! @index(name: "byCategory")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  items: [OrderItem]!
  total: Float!
  status: OrderStatus!
  restaurantID: ID! @index(name: "byRestaurant")
  createdAt: AWSDateTime!
}

type OrderItem {
  menuItemId: ID!
  quantity: Int!
  price: Float!
  name: String!
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}